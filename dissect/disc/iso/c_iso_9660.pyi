# Generated by cstruct-stubgen
from typing import BinaryIO, Literal, overload

import dissect.cstruct as __cs__
from typing_extensions import TypeAlias

class _c_iso(__cs__.cstruct):
    ISO_VD_PRIMARY: Literal[1] = ...
    ISO_VD_SUPPLEMENTARY: Literal[2] = ...
    ISO_VD_END: Literal[255] = ...
    ISO_STANDARD_ID: Literal[b"CD001"] = ...
    ISOFS_BLOCK_SIZE: Literal[2048] = ...
    SYSTEM_AREA_SIZE: Literal[32768] = ...
    ROOT_DIRECTORY_RECORD_LENGTH: Literal[34] = ...
    class iso_volume_descriptor(__cs__.Structure):
        type: _c_iso.uint8
        id: __cs__.CharArray
        version: _c_iso.uint8
        data: __cs__.CharArray
        @overload
        def __init__(
            self,
            type: _c_iso.uint8 | None = ...,
            id: __cs__.CharArray | None = ...,
            version: _c_iso.uint8 | None = ...,
            data: __cs__.CharArray | None = ...,
        ): ...
        @overload
        def __init__(self, fh: bytes | memoryview | bytearray | BinaryIO, /): ...

    class dec_datetime(__cs__.Structure):
        year: __cs__.CharArray
        month: __cs__.CharArray
        day: __cs__.CharArray
        hour: __cs__.CharArray
        minute: __cs__.CharArray
        second: __cs__.CharArray
        centiseconds: __cs__.CharArray
        offset: _c_iso.int8
        @overload
        def __init__(
            self,
            year: __cs__.CharArray | None = ...,
            month: __cs__.CharArray | None = ...,
            day: __cs__.CharArray | None = ...,
            hour: __cs__.CharArray | None = ...,
            minute: __cs__.CharArray | None = ...,
            second: __cs__.CharArray | None = ...,
            centiseconds: __cs__.CharArray | None = ...,
            offset: _c_iso.int8 | None = ...,
        ): ...
        @overload
        def __init__(self, fh: bytes | memoryview | bytearray | BinaryIO, /): ...

    class datetime_short(__cs__.Structure):
        year: _c_iso.uint8
        month: _c_iso.uint8
        day: _c_iso.uint8
        hour: _c_iso.uint8
        minute: _c_iso.uint8
        second: _c_iso.uint8
        offset: _c_iso.int8
        @overload
        def __init__(
            self,
            year: _c_iso.uint8 | None = ...,
            month: _c_iso.uint8 | None = ...,
            day: _c_iso.uint8 | None = ...,
            hour: _c_iso.uint8 | None = ...,
            minute: _c_iso.uint8 | None = ...,
            second: _c_iso.uint8 | None = ...,
            offset: _c_iso.int8 | None = ...,
        ): ...
        @overload
        def __init__(self, fh: bytes | memoryview | bytearray | BinaryIO, /): ...

    class iso_primary_descriptor(__cs__.Structure):
        type: _c_iso.uint8
        id: __cs__.CharArray
        version: _c_iso.uint8
        unused1: _c_iso.char
        system_id: __cs__.CharArray
        volume_id: __cs__.CharArray
        unused2: __cs__.CharArray
        volume_space_size: _c_iso.uint32
        volume_space_size_be: __cs__.CharArray
        unused3: __cs__.CharArray
        volume_set_size: _c_iso.uint16
        volume_set_size_be: __cs__.CharArray
        volume_sequence_number: _c_iso.uint16
        volume_sequence_number_be: __cs__.CharArray
        logical_block_size: _c_iso.uint16
        logical_block_size_be: __cs__.CharArray
        path_table_size: _c_iso.uint32
        path_table_size_be: __cs__.CharArray
        type_l_path_table: _c_iso.uint32
        opt_type_l_path_table: _c_iso.uint32
        type_m_path_table_be: __cs__.CharArray
        opt_type_m_path_table_be: __cs__.CharArray
        root_directory_record: __cs__.CharArray
        volume_set_id: __cs__.CharArray
        publisher_id: __cs__.CharArray
        preparer_id: __cs__.CharArray
        application_id: __cs__.CharArray
        copy_right_file_id: __cs__.CharArray
        abstract_file_id: __cs__.CharArray
        bibliographic_file_id: __cs__.CharArray
        creation_date: _c_iso.dec_datetime
        modification_date: _c_iso.dec_datetime
        expiration_date: _c_iso.dec_datetime
        effective_date: _c_iso.dec_datetime
        file_structure_version: _c_iso.uint8
        unused4: _c_iso.char
        application_data: __cs__.CharArray
        unused5: __cs__.CharArray
        @overload
        def __init__(
            self,
            type: _c_iso.uint8 | None = ...,
            id: __cs__.CharArray | None = ...,
            version: _c_iso.uint8 | None = ...,
            unused1: _c_iso.char | None = ...,
            system_id: __cs__.CharArray | None = ...,
            volume_id: __cs__.CharArray | None = ...,
            unused2: __cs__.CharArray | None = ...,
            volume_space_size: _c_iso.uint32 | None = ...,
            volume_space_size_be: __cs__.CharArray | None = ...,
            unused3: __cs__.CharArray | None = ...,
            volume_set_size: _c_iso.uint16 | None = ...,
            volume_set_size_be: __cs__.CharArray | None = ...,
            volume_sequence_number: _c_iso.uint16 | None = ...,
            volume_sequence_number_be: __cs__.CharArray | None = ...,
            logical_block_size: _c_iso.uint16 | None = ...,
            logical_block_size_be: __cs__.CharArray | None = ...,
            path_table_size: _c_iso.uint32 | None = ...,
            path_table_size_be: __cs__.CharArray | None = ...,
            type_l_path_table: _c_iso.uint32 | None = ...,
            opt_type_l_path_table: _c_iso.uint32 | None = ...,
            type_m_path_table_be: __cs__.CharArray | None = ...,
            opt_type_m_path_table_be: __cs__.CharArray | None = ...,
            root_directory_record: __cs__.CharArray | None = ...,
            volume_set_id: __cs__.CharArray | None = ...,
            publisher_id: __cs__.CharArray | None = ...,
            preparer_id: __cs__.CharArray | None = ...,
            application_id: __cs__.CharArray | None = ...,
            copy_right_file_id: __cs__.CharArray | None = ...,
            abstract_file_id: __cs__.CharArray | None = ...,
            bibliographic_file_id: __cs__.CharArray | None = ...,
            creation_date: _c_iso.dec_datetime | None = ...,
            modification_date: _c_iso.dec_datetime | None = ...,
            expiration_date: _c_iso.dec_datetime | None = ...,
            effective_date: _c_iso.dec_datetime | None = ...,
            file_structure_version: _c_iso.uint8 | None = ...,
            unused4: _c_iso.char | None = ...,
            application_data: __cs__.CharArray | None = ...,
            unused5: __cs__.CharArray | None = ...,
        ): ...
        @overload
        def __init__(self, fh: bytes | memoryview | bytearray | BinaryIO, /): ...

    class iso_directory_record_datetime(__cs__.Structure):
        year: _c_iso.uint8
        month: _c_iso.uint8
        day: _c_iso.uint8
        hour: _c_iso.uint8
        minute: _c_iso.uint8
        second: _c_iso.uint8
        offset: _c_iso.int8
        @overload
        def __init__(
            self,
            year: _c_iso.uint8 | None = ...,
            month: _c_iso.uint8 | None = ...,
            day: _c_iso.uint8 | None = ...,
            hour: _c_iso.uint8 | None = ...,
            minute: _c_iso.uint8 | None = ...,
            second: _c_iso.uint8 | None = ...,
            offset: _c_iso.int8 | None = ...,
        ): ...
        @overload
        def __init__(self, fh: bytes | memoryview | bytearray | BinaryIO, /): ...

    class iso_directory_record_flags(__cs__.Structure):
        Hidden: _c_iso.uint8
        Directory: _c_iso.uint8
        AssociatedFile: _c_iso.uint8
        ExtendedAttributeRecordContainsInformation: _c_iso.uint8
        OwnerAndGroupPermissionsAreSet: _c_iso.uint8
        Reserved: _c_iso.uint8
        SpansMultipleExtents: _c_iso.uint8
        @overload
        def __init__(
            self,
            Hidden: _c_iso.uint8 | None = ...,
            Directory: _c_iso.uint8 | None = ...,
            AssociatedFile: _c_iso.uint8 | None = ...,
            ExtendedAttributeRecordContainsInformation: _c_iso.uint8 | None = ...,
            OwnerAndGroupPermissionsAreSet: _c_iso.uint8 | None = ...,
            Reserved: _c_iso.uint8 | None = ...,
            SpansMultipleExtents: _c_iso.uint8 | None = ...,
        ): ...
        @overload
        def __init__(self, fh: bytes | memoryview | bytearray | BinaryIO, /): ...

    class iso_directory_record(__cs__.Structure):
        length: _c_iso.uint8
        ext_attr_length: _c_iso.uint8
        extent: _c_iso.uint32
        extent_be: __cs__.CharArray
        size: _c_iso.uint32
        size_be: __cs__.CharArray
        date_time: _c_iso.iso_directory_record_datetime
        flags: _c_iso.iso_directory_record_flags
        file_unit_size: _c_iso.uint8
        interleave: _c_iso.uint8
        volume_sequence_number: _c_iso.uint16
        volume_sequence_number_be: __cs__.CharArray
        name_len: _c_iso.uint8
        name: __cs__.CharArray
        system_use: __cs__.CharArray
        @overload
        def __init__(
            self,
            length: _c_iso.uint8 | None = ...,
            ext_attr_length: _c_iso.uint8 | None = ...,
            extent: _c_iso.uint32 | None = ...,
            extent_be: __cs__.CharArray | None = ...,
            size: _c_iso.uint32 | None = ...,
            size_be: __cs__.CharArray | None = ...,
            date_time: _c_iso.iso_directory_record_datetime | None = ...,
            flags: _c_iso.iso_directory_record_flags | None = ...,
            file_unit_size: _c_iso.uint8 | None = ...,
            interleave: _c_iso.uint8 | None = ...,
            volume_sequence_number: _c_iso.uint16 | None = ...,
            volume_sequence_number_be: __cs__.CharArray | None = ...,
            name_len: _c_iso.uint8 | None = ...,
            name: __cs__.CharArray | None = ...,
            system_use: __cs__.CharArray | None = ...,
        ): ...
        @overload
        def __init__(self, fh: bytes | memoryview | bytearray | BinaryIO, /): ...

    class iso_path_table_entry(__cs__.Structure):
        directory_id_len: _c_iso.uint8
        ext_attr_rec_len: _c_iso.uint8
        extent_location: _c_iso.uint32
        parent_dir_no: _c_iso.uint16
        name: __cs__.CharArray
        @overload
        def __init__(
            self,
            directory_id_len: _c_iso.uint8 | None = ...,
            ext_attr_rec_len: _c_iso.uint8 | None = ...,
            extent_location: _c_iso.uint32 | None = ...,
            parent_dir_no: _c_iso.uint16 | None = ...,
            name: __cs__.CharArray | None = ...,
        ): ...
        @overload
        def __init__(self, fh: bytes | memoryview | bytearray | BinaryIO, /): ...

# Technically `c_iso` is an instance of `_c_iso`, but then we can't use it in type hints
c_iso: TypeAlias = _c_iso
